{
    "swagger": "2.0",
    "basePath": "/",
    "info": {
        "title": "Majority Judgment API",
        "version": "0.0.0-dev",
        "description": "This is a **deliberation service** using **majority judgment** polling.\nIt's **libre software** ([source](https://github.com/mieuxvoter)) made and maintained by [MieuxVoter.fr](https://mieuxvoter.fr).\nYou're browsing the API documentation and sandbox.\n\n## Use one of the known clients\n\n- TODO: add an URL to a client of the API\n\n\n## Try it out the hard way\n\n### Create an account\n\nYou will need a user account to interact with polls.\nHead to **Registration** \u2192 `POST /users` below.\nClick _Try it out_, set your desired credentials, and execute the query.\nScroll down to see the response.\n\n### Authenticate\n\nUse your credentials in the **Login** \u2192 `POST /_jwt`, and the API will return a Json Web Token valid for one hour.\nCopy the token (not the whole response, and without quotes) in the field behind the `Authorize \ud83d\udd12` button.\n\n### Create a poll\n\n**Poll** \u2192 `POST /polls`\n\nKeep the response, you'll need the uuids.\n\n> TODO: document invitation generation\n\n### Submit judgments\n\n**Ballot** \u2192 `POST /polls/{pollId}/proposals/{proposalId}/ballots`\n\nOne request per proposal, for now.  We plan on making an endpoint to submit them all at once.\n\n### Collect the results\n\n**Result** \u2192 `GET /polls/{id}/result`\n\n## Use a generated client library\n\n- for php  (link!)\n- for typescript-node  (link!!)\n- \u2026\n\nThere are clients we can generate for most languages.\nGet in touch if you'd like one in particular!\nOr clone this project and use `bin/generate-client.bash -t whatever`.\n"
    },
    "paths": {
        "/ballots/{id}": {
            "get": {
                "tags": [
                    "Ballot"
                ],
                "operationId": "getBallotItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves a Ballot resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ballot resource response",
                        "schema": {
                            "$ref": "#/definitions/Ballot-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ballot"
                ],
                "operationId": "deleteBallotItem",
                "summary": "Removes the Ballot resource.",
                "responses": {
                    "204": {
                        "description": "Ballot resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/grades/{id}": {
            "get": {
                "tags": [
                    "Grade"
                ],
                "operationId": "getGradeItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves a Grade resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grade resource response",
                        "schema": {
                            "$ref": "#/definitions/Grade-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/invitations": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "operationId": "getInvitationCollection",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves the collection of Invitation resources.",
                "responses": {
                    "200": {
                        "description": "Invitation collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation-read"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/invitations/{id}": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "operationId": "getInvitationItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves a Invitation resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation resource response",
                        "schema": {
                            "$ref": "#/definitions/Invitation-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/polls": {
            "get": {
                "tags": [
                    "Poll"
                ],
                "operationId": "getPollCollection",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves the collection of Poll resources.",
                "responses": {
                    "200": {
                        "description": "Poll collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Poll-read"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Poll"
                ],
                "operationId": "postPollCollection",
                "consumes": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Creates a Poll resource.",
                "responses": {
                    "201": {
                        "description": "Poll resource created",
                        "schema": {
                            "$ref": "#/definitions/Poll-read"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "poll",
                        "in": "body",
                        "description": "The new Poll resource",
                        "schema": {
                            "$ref": "#/definitions/Poll-create"
                        }
                    }
                ]
            }
        },
        "/polls/{id}": {
            "get": {
                "tags": [
                    "Poll"
                ],
                "operationId": "getPollItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves a Poll resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll resource response",
                        "schema": {
                            "$ref": "#/definitions/Poll-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Poll"
                ],
                "operationId": "deletePollItem",
                "summary": "Removes the Poll resource.",
                "responses": {
                    "204": {
                        "description": "Poll resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/polls/{id}/grades": {
            "get": {
                "tags": [
                    "Grade",
                    "Poll"
                ],
                "operationId": "api_polls_grades_get_subresource",
                "summary": "Retrieves the collection of Grade resources.",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "Grade collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Grade-read"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/polls/{id}/invitations": {
            "get": {
                "tags": [
                    "Invitation"
                ],
                "operationId": "get_for_pollInvitationCollection",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves the collection of Invitation resources.",
                "responses": {
                    "200": {
                        "description": "Invitation collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation-read"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/polls/{id}/proposals": {
            "post": {
                "tags": [
                    "Proposal"
                ],
                "operationId": "postProposalCollection",
                "consumes": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Creates a Proposal resource.",
                "responses": {
                    "201": {
                        "description": "Proposal resource created",
                        "schema": {
                            "$ref": "#/definitions/Proposal-read"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "proposal",
                        "in": "body",
                        "description": "The new Proposal resource",
                        "schema": {
                            "$ref": "#/definitions/Proposal-create"
                        }
                    }
                ]
            },
            "get": {
                "tags": [
                    "Proposal",
                    "Poll"
                ],
                "operationId": "api_polls_proposals_get_subresource",
                "summary": "Retrieves the collection of Proposal resources.",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "Proposal collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Proposal-read"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/polls/{id}/proposals/{proposals}/ballots": {
            "get": {
                "tags": [
                    "Ballot",
                    "Proposal"
                ],
                "operationId": "api_polls_proposals_ballots_get_subresource",
                "summary": "Retrieves the collection of Ballot resources.",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "Ballot collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ballot"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "proposals",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/polls/{id}/result": {
            "get": {
                "tags": [
                    "Result",
                    "Poll"
                ],
                "operationId": "get_for_pollResultItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Gets the result of a poll",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Result resource response",
                        "schema": {
                            "$ref": "#/definitions/Result-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "description": "This endpoint computes a fresh result from the ballots currently received.\nFor now, you may read a poll's result _at any time_.\n"
            }
        },
        "/polls/{pollId}/proposals/{proposalId}/ballots": {
            "post": {
                "tags": [
                    "Ballot"
                ],
                "operationId": "postBallotCollection",
                "consumes": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Creates a Ballot resource.",
                "responses": {
                    "201": {
                        "description": "Ballot resource created",
                        "schema": {
                            "$ref": "#/definitions/Ballot-created"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "ballot",
                        "in": "body",
                        "description": "The new Ballot resource",
                        "schema": {
                            "$ref": "#/definitions/Ballot-create"
                        }
                    }
                ]
            }
        },
        "/proposals/{id}": {
            "get": {
                "tags": [
                    "Proposal"
                ],
                "operationId": "getProposalItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "summary": "Retrieves a Proposal resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Proposal resource response",
                        "schema": {
                            "$ref": "#/definitions/Proposal-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/proposals/{id}/ballots": {
            "get": {
                "tags": [
                    "Ballot",
                    "Proposal"
                ],
                "operationId": "api_proposals_ballots_get_subresource",
                "summary": "Retrieves the collection of Ballot resources.",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "Ballot collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Ballot"
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "summary": "Retrieves the collection of Users.",
                "description": "Only administrators are allowed to access this.",
                "tags": [
                    "User",
                    "Administration"
                ],
                "operationId": "getUserCollection",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "200": {
                        "description": "User collection response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User-read"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "type": "integer"
                    }
                ]
            },
            "post": {
                "summary": "Registers a new User.",
                "description": "api.users.post.description",
                "tags": [
                    "User",
                    "Registration"
                ],
                "operationId": "postUserCollection",
                "consumes": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "schema": {
                            "$ref": "#/definitions/User-read"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The new User resource",
                        "schema": {
                            "$ref": "#/definitions/User-create"
                        }
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Gets information about a User.",
                "description": "You are authorized to get information about yourself only.",
                "tags": [
                    "User"
                ],
                "operationId": "getUserItem",
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource response",
                        "schema": {
                            "$ref": "#/definitions/User-read"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "summary": "Updates information about a User.",
                "description": "Logged-in users are authorized to update information about themselves only.",
                "tags": [
                    "User"
                ],
                "operationId": "putUserItem",
                "consumes": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json",
                    "text/html"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "The updated User resource",
                        "schema": {
                            "$ref": "#/definitions/User-edit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "schema": {
                            "$ref": "#/definitions/User-read"
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "operationId": "deleteUserItem",
                "summary": "Removes the User resource.",
                "responses": {
                    "204": {
                        "description": "User resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/_jwt": {
            "post": {
                "tags": [
                    "Login",
                    "User"
                ],
                "operationId": "postCredentialsItem",
                "summary": "Returns an authentication Token from login Credentials.",
                "description": "Creating and participating to private polls require authentication.  The Token returned is a [JWT](https://jwt.io/) valid for one hour.",
                "responses": {
                    "200": {
                        "description": "A JSON Web Token (JWT)"
                    },
                    "400": {
                        "description": "Bad credentials."
                    },
                    "401": {
                        "description": "Unauthorized credentials."
                    },
                    "402": {
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/definitions/Token"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/definitions/Token"
                                }
                            }
                        }
                    }
                },
                "consumes": [
                    "application/ld+json",
                    "application/json"
                ],
                "produces": [
                    "application/ld+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Credentials",
                        "in": "body",
                        "description": "User Credentials",
                        "schema": {
                            "$ref": "#/definitions/Credentials"
                        }
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "in": "header",
            "description": "Value for the Authorization header",
            "name": "Authorization"
        }
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "definitions": {
        "Ballot": {
            "type": "object",
            "description": "A Ballot holds a Judgment on a Proposal, by a Participant of a Poll.",
            "properties": {
                "uuid": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "readOnly": true,
                    "type": "integer"
                },
                "proposal": {
                    "description": "The Majority Judgment Poll Proposal the author is giving a grade to.",
                    "type": "string",
                    "format": "iri-reference"
                },
                "grade": {
                    "description": "The Grade attributed by the Judge to the Proposal.",
                    "type": "string",
                    "format": "iri-reference"
                },
                "authorName": {
                    "type": "string"
                },
                "participant": {
                    "type": "string",
                    "format": "iri-reference"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Ballot-create": {
            "type": "object",
            "description": "A Ballot holds a Judgment on a Proposal, by a Participant of a Poll.",
            "properties": {
                "grade": {
                    "description": "The Grade attributed by the Judge to the Proposal.",
                    "$ref": "#/definitions/Grade-create"
                }
            }
        },
        "Ballot-created": {
            "type": "object",
            "description": "A Ballot holds a Judgment on a Proposal, by a Participant of a Poll.",
            "properties": {
                "uuid": {
                    "type": "string",
                    "format": "uuid"
                },
                "proposal": {
                    "description": "The Majority Judgment Poll Proposal the author is giving a grade to.",
                    "type": "string",
                    "format": "iri-reference"
                },
                "grade": {
                    "description": "The Grade attributed by the Judge to the Proposal.",
                    "type": "string",
                    "format": "iri-reference"
                }
            }
        },
        "Ballot-read": {
            "type": "object",
            "description": "A Ballot holds a Judgment on a Proposal, by a Participant of a Poll.",
            "properties": {
                "uuid": {
                    "type": "string",
                    "format": "uuid"
                },
                "proposal": {
                    "description": "The Majority Judgment Poll Proposal the author is giving a grade to.",
                    "$ref": "#/definitions/Proposal-read"
                },
                "grade": {
                    "description": "The Grade attributed by the Judge to the Proposal.",
                    "$ref": "#/definitions/Grade-read"
                }
            }
        },
        "Grade-create": {
            "type": "object",
            "description": "Grades are attributed to Proposals by Participants, in Ballots.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "level": {
                    "description": "Used to compare grades procedurally.  \\n\nUsually starts at zero (0) and ends at <MAXIMUM_GRADES>-1.  \\n\nGrades of the same poll MUST have unique levels between themselves.",
                    "type": "integer"
                }
            }
        },
        "Grade-read": {
            "type": "object",
            "description": "Grades are attributed to Proposals by Participants, in Ballots.",
            "properties": {
                "uuid": {
                    "readOnly": true,
                    "description": "Universally Unique IDentifier, something like this: 10e3c5e8-4a7d-4d23-a20a-8c175bf45a92",
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "level": {
                    "description": "Used to compare grades procedurally.  \\n\nUsually starts at zero (0) and ends at <MAXIMUM_GRADES>-1.  \\n\nGrades of the same poll MUST have unique levels between themselves.",
                    "type": "integer"
                }
            }
        },
        "Invitation-read": {
            "type": "object",
            "description": "An invitation to a poll.",
            "properties": {
                "uuid": {
                    "readOnly": true,
                    "description": "Universally Unique IDentifier, something like this: 10e3c5e8-4a7d-4d23-a20a-8c175bf45a92",
                    "type": "string",
                    "format": "uuid"
                },
                "poll": {
                    "description": "The poll this invitation is for.",
                    "$ref": "#/definitions/Poll-read"
                },
                "accepted": {
                    "readOnly": true,
                    "description": "Whether this invitation was accepted by someone already.",
                    "type": "boolean"
                },
                "acceptedByYou": {
                    "readOnly": true,
                    "description": "Whether this invitation was accepted by the current user.",
                    "type": "boolean"
                }
            }
        },
        "Poll-create": {
            "type": "object",
            "description": "A Liquid Majority Judgment Poll.",
            "properties": {
                "slug": {
                    "description": "A unique, short, human-friendly identifier for the Poll.",
                    "type": "string"
                },
                "scope": {
                    "description": "The scope defines how the poll is accessible:\n`public`: Everyone may access the poll, and it will be publicly listed\n`unlisted`: Everyone may access the poll if they know its URI\n`private`: Only invited participants may participate\nThe default scope is `unlisted`.",
                    "type": "string"
                },
                "subject": {
                    "description": "The subject of the poll. Careful consideration should be taken in the writing of this.",
                    "type": "string"
                },
                "proposals": {
                    "description": "A list of Proposals to judge,\nthat MUST contain at least two proposals,\nand can have at most 256 proposals\nbut that upper limit is arbitrary\nand may wildly vary after benchmark and discussion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Proposal-create"
                    }
                },
                "grades": {
                    "description": "A list of Grades that Participants may give to Proposals \u2013\nThat list MUST contain at least two Grades,\nand at most 16 (another arbitrary limit to discuss).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Grade-create"
                    }
                }
            },
            "required": [
                "subject"
            ]
        },
        "Poll-read": {
            "type": "object",
            "description": "A Liquid Majority Judgment Poll.",
            "properties": {
                "uuid": {
                    "description": "A Universally Unique IDentifier (version 4)\nlike b7e7d328-c1fb-4af7-b258-23d08f6ed2d4\nand you may use the short prefix to fetch a poll as well,\nlike b7e7d328 or even b7e-7d-328 to make it more human-legible.",
                    "type": "string"
                },
                "slug": {
                    "description": "A unique, short, human-friendly identifier for the Poll.",
                    "type": "string"
                },
                "scope": {
                    "description": "The scope defines how the poll is accessible:\n`public`: Everyone may access the poll, and it will be publicly listed\n`unlisted`: Everyone may access the poll if they know its URI\n`private`: Only invited participants may participate\nThe default scope is `unlisted`.",
                    "type": "string"
                },
                "subject": {
                    "description": "The subject of the poll. Careful consideration should be taken in the writing of this.",
                    "type": "string"
                },
                "proposals": {
                    "description": "A list of Proposals to judge,\nthat MUST contain at least two proposals,\nand can have at most 256 proposals\nbut that upper limit is arbitrary\nand may wildly vary after benchmark and discussion.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Proposal-read"
                    }
                },
                "grades": {
                    "description": "A list of Grades that Participants may give to Proposals \u2013\nThat list MUST contain at least two Grades,\nand at most 16 (another arbitrary limit to discuss).",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Grade-read"
                    }
                },
                "canGenerateInvitations": {
                    "description": "Can the current user generate invitations for this poll or not?\nHelps clients show the relevant links and forms.",
                    "type": "boolean"
                }
            },
            "required": [
                "subject"
            ]
        },
        "Proposal-create": {
            "type": "object",
            "description": "A Proposal of a Poll whom any Participant can give a Grade to.",
            "properties": {
                "title": {
                    "description": "The title of the proposal.",
                    "type": "string"
                },
                "poll": {
                    "description": "The poll this proposal is attached to.",
                    "$ref": "#/definitions/Poll-create"
                }
            }
        },
        "Proposal-read": {
            "type": "object",
            "description": "A Proposal of a Poll whom any Participant can give a Grade to.",
            "properties": {
                "uuid": {
                    "description": "Universally Unique IDentifier, something like this: 10e3c5e8-4a7d-4d23-a20a-8c175bf45a92",
                    "type": "string",
                    "format": "uuid"
                },
                "title": {
                    "description": "The title of the proposal.",
                    "type": "string"
                }
            }
        },
        "ProposalGradeResult-read": {
            "type": "object",
            "description": "Results for one Grade of one Proposal,\nbasically the tally of Ballots for this Grade and Proposal,\nbut there might be more information in there in the future.",
            "properties": {
                "grade": {
                    "description": "The IRI of the Grade this Result is about.",
                    "type": "string",
                    "format": "iri-reference"
                },
                "proposal": {
                    "description": "The IRI of the Proposal this Result is about.",
                    "type": "string",
                    "format": "iri-reference"
                },
                "tally": {
                    "description": "Amount of Ballots emitted for this Grade on the Proposal.",
                    "type": "integer"
                }
            }
        },
        "ProposalResult-read": {
            "type": "object",
            "description": "The ranked Result of one Proposal in a Poll.",
            "properties": {
                "proposal": {
                    "description": "The Proposal this Result is for.",
                    "$ref": "#/definitions/Proposal-read"
                },
                "rank": {
                    "description": "The computed rank of the Proposal in the Poll \u2014\nRank starts at 1 and goes upwards, and\ntwo proposals may have the same rank.",
                    "type": "integer"
                },
                "medianGrade": {
                    "description": "The median Grade of the Proposal.",
                    "$ref": "#/definitions/Grade-read"
                },
                "tally": {
                    "description": "Total Amount of Ballots emitted for the Proposal this Result is about.",
                    "type": "integer"
                },
                "gradesResults": {
                    "description": "Results for each Grade, on this Proposal \u2014\nThis is the merit profile of the Proposal.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProposalGradeResult-read"
                    }
                }
            }
        },
        "Result-read": {
            "type": "object",
            "description": "A Result of a Majority Judgment Poll.  Holds a leaderboard of the proposals.",
            "properties": {
                "poll": {
                    "description": "The Poll this Result describes.",
                    "$ref": "#/definitions/Poll-read"
                },
                "algorithm": {
                    "description": "The name of the algorithm used to derive this Result.",
                    "type": "string"
                },
                "leaderboard": {
                    "description": "In order, each Proposals' Result.  In extreme,\nlow-participation polls, some Proposals may have the same rank ;\nin that case, their order should be the order they were added to the poll.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProposalResult-read"
                    }
                }
            }
        },
        "User-create": {
            "type": "object",
            "description": "Users organize and participate in Polls.",
            "properties": {
                "email": {
                    "description": "When provided, the email must be unique amongst Users.",
                    "type": "string"
                },
                "username": {
                    "description": "The username must be unique amongst Users.",
                    "type": "string"
                },
                "password": {
                    "description": "The plain password of the User.",
                    "type": "string"
                }
            },
            "required": [
                "username"
            ]
        },
        "User-edit": {
            "type": "object",
            "description": "Users organize and participate in Polls.",
            "properties": {
                "email": {
                    "description": "When provided, the email must be unique amongst Users.",
                    "type": "string"
                },
                "username": {
                    "description": "The username must be unique amongst Users.",
                    "type": "string"
                },
                "password": {
                    "description": "The plain password of the User.",
                    "type": "string"
                }
            },
            "required": [
                "username"
            ]
        },
        "User-read": {
            "type": "object",
            "description": "Users organize and participate in Polls.",
            "properties": {
                "uuid": {
                    "type": "string",
                    "format": "uuid"
                },
                "email": {
                    "description": "When provided, the email must be unique amongst Users.",
                    "type": "string"
                },
                "username": {
                    "description": "The username must be unique amongst Users.",
                    "type": "string"
                },
                "polls": {
                    "description": "The polls authored by this User.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Poll-read"
                    }
                }
            },
            "required": [
                "username"
            ]
        },
        "Token": {
            "type": "object",
            "description": "An authentication token ([JWT](https://jwt.io/)) for the `Authorization: Bearer` header.",
            "properties": {
                "token": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Credentials": {
            "type": "object",
            "description": "User credentials to submit to the login endpoint in order to get a perishable authentication token (Json Web Token).",
            "properties": {
                "usernameOrEmail": {
                    "type": "string",
                    "example": "michel",
                    "description": "The email or username you chose during registration."
                },
                "password": {
                    "type": "string",
                    "example": "~5Up3\u00ae$3cR3741337",
                    "description": "The password or passphrase you chose during registration."
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://oas.mieuxvoter.fr",
            "description": "Demo server of the MieuxVoter association"
        }
    ]
}
