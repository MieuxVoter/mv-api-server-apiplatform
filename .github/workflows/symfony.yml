# https://help.github.com/en/actions
name: Full CI process
on:
  push:
    branches:
      - master
#env:
#  ES_HTTP_PORT: 9209
jobs:
  symfony:
    name: MV OpenAPI (PHP ${{ matrix.php-versions }})
    # Try out an alpine here perhaps?
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-18.04
#    services:
      # https://docs.docker.com/samples/library/mysql/
#      mysql:
#        image: mysql:5.7
#        env:
#          MYSQL_ROOT_PASSWORD: root
#        ports:
#          - 3306:3306
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4']
#        php-versions: ['5.4', '7.4', '8.0']

    steps:
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # This is broken, now.
      # https://github.com/marketplace/actions/checkout-submodules
#      - name: Checkout submodules
#        uses: textbook/git-checkout-submodule-action@master

      # https://github.com/shivammathur/setup-php (community)
      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
          #coverage: xdebug
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies using composer
        run: composer install --dev

      # —— Symfony 🎵 ——————————————————————————————————————————————————————————
#      - name: Check Symfony requirements
#        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: |
          bin/console -V

      ## —— Coding standards ✨ ————————————————————————————————————————————————
      # Can't handle PHP8 for now
#      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
#        run: make cs
#        if: matrix.php-versions == '7.4'

      ## —— Static analysis ✨ —————————————————————————————————————————————————
#      - name: Static analysis of PHP code (PHPStan)
#        run: make static-analysis
#        if: matrix.php-versions == '7.4'

      ## —— Tests ✅ ———————————————————————————————————————————————————————————
      - name: Prepare integration tests
        run: |
          cp behat.yml.dist behat.yml
          cp config/jwt/private.pem.dist config/jwt/private.pem
          cp config/jwt/public.pem.dist config/jwt/public.pem
          bin/console lexik:jwt:check-config

      - name: Run integration tests
        run: |
          vendor/bin/behat -vv --tags='~wip&&~noci'

# Future Client Library Code Generation
#  codegen:
#    name: Client Libraries Generation
#    runs-on: ubuntu-18.04
#    strategy:
#      fail-fast: true
#      matrix:
#        php-versions: ['7.4']
#
#    steps:
#      # —— Setup Github actions 🐙 —————————————————————————————————————————————
#      # https://github.com/actions/checkout (official)
#      - name: Checkout
#        uses: actions/checkout@v2