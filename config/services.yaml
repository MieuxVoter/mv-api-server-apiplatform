# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    api_documentation_extras_v2:
        servers:
            -   url: https://oas.mieuxvoter.fr
                description: Demo server of the MieuxVoter association
    api_documentation_extras_v3:
        servers:
            -   url: https://oas.mieuxvoter.fr
                description: Demo server of the MieuxVoter association

#            -   url: //petstore.swagger.io/sandbox
#                description: Sandbox server
#        info:
#            description: |
#                This is a sample server Petstore server.
#                You can find out more about Swagger at
#                [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).
#                For this sample, you can use the api key `special-key` to test the authorization filters.
#
#                # Introduction
#                This API is documented in **OpenAPI format** and is based on
#                [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
#                It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
#                tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard
#                OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).
#
#                # OpenAPI Specification
#                This API is documented in **OpenAPI format** and is based on
#                [Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.
#                It was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)
#                tool and [ReDoc](https://github.com/Rebilly/ReDoc) documentation. In addition to standard
#                OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md).
#
#                # Cross-Origin Resource Sharing
#                This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).
#                And that allows cross-domain communication from the browser.
#                All responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.
#
#                # Authentication
#
#                Petstore offers two forms of authentication:
#                  - API Key
#                  - OAuth2
#                OAuth2 - an open protocol to allow secure authorization in a simple
#                and standard method from web, mobile and desktop applications.
#
#                <security-definitions />
#
#            version: 1.0.0
#            title: 'FOO BAR TITLE'
#            termsOfService: 'http://swagger.io/terms/'
#            contact:
#                name: API Support
#                email: apiteam@swagger.io
#                url: https://github.com/Rebilly/ReDoc
#            x-logo:
#                url: 'https://rebilly.github.io/ReDoc/petstore-logo.png'
#                altText: Petstore logo
#            license:
#                name: Apache 2.0
#                url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
#        externalDocs:
#            description: Find out how to create Github repo for your OpenAPI spec.
#            url: 'https://github.com/Rebilly/generator-openapi-repo'


services:

    # Add service definitions when explicit configuration is needed
    # Please note that last definitions always *replace* previous ones

    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Add tags to services implementing a specific interface
    _instanceof:
        App\Swagger\DocumenterInterface:
            tags: ['oas_documenter']
        App\Ranking\RankingInterface:
            tags: ['poll_ranking']

    # Makes classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        public: true
        resource: '../src/*'
        exclude:
            - '../src/{Features,DependencyInjection,Entity,Migrations,Tests,Kernel.php}'
            - '../src/Ranking/Options'

    # Override the test client to get pretty responses for CLI, and perhaps store some config like URL prefixes.
    test.client:
        # Try removing the public: true for a very confusing error message about framework.test
        public: true
        class: App\Features\ApiTesterClient

    # The services we need in the feature suite
    App\Features\:
        public: true
        resource: '../src/Features/{Actors.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Configure the Rankings to load all the Ranking services.
    App\Ranking\Rankings:
        public: true
        arguments:
            - !tagged 'poll_ranking'

    # Who doesn't need Twig in translations strings?
    App\Translator\TwiggyTranslator:
        decorates: translator
        arguments:
            # Translation domains to enable Twig for (other domains _should_ behave like usual)
            - ['messages', 'features', '', ]
            # Pass the old service as an argument, it has all the I18N config
            # This service id only exists because we're decorating the translator
            - '@App\Translator\TwiggyTranslator.inner'
            # Twig also has the extensions and global vars available
            - "@twig"

    # Wrapper for the Normalizer
    App\Serializer\ApiNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments: [ '@App\Serializer\ApiNormalizer.inner' ]

    # Decorate the docs normalizer to add our custom doc tidbits
    # This SwaggerGenerator is somewhat generic, and could be moved to a Bundle?
    App\Swagger\SwaggerDocumentationDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments:
            - '@App\Swagger\SwaggerDocumentationDecorator.inner'
            - !tagged 'oas_documenter'
            - '%api_documentation_extras_v2%'
            - '%api_documentation_extras_v3%'
        autoconfigure: false

    # JSON Web Token shenanigans
    app.event.jwt_created_listener:
        class: App\EventListener\JWTCreatedListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }